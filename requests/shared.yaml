schemas:
  bucket:
    type: string
    example: example
    description: The bucket (client) name

  member_uri:
    type: string
    example: /example/member/6305f074683e800f3abe809e/
    description: a member URI or 'membership' uri will always be in the format `/bucket/member/uid/` with the word 'member' in the middle

  q:
    type: string
    example: john smith

  uid:
    type: string
    example: 6305f074683e800f3abe809e
    description: Usually the final element in the URI, an alphanumeric unique identifier

  uri:
    type: string
    example: /example/person/6305f074683e800f3abe809e/
    description: URIs are unique identifiers for resources in the system, they are structured as follows `/bucket/resource_type/uid/`

  resource_type:
    type: string
    example: person, organisation, member, payment
    description: The type of resource, usually the second element in the URI

  signature:
    type: string
    example: 6305f
    description: An alphanumeric string that is used to verify the request

  registration_number:
    type: string
    example: EK23 JWW
    description: Vehicle registration number

  engine_number:
    type: string
    example: 1234567890
    description: Vehicle engine number

  identifying_number:
    type: string
    example: 1234567890
    description: Vehicle identifying number (VIN in modern cars)


parameters:
  split_uri:
    - name: bucket
      in: path
      required: true
      schema:
        $ref: 'shared.yaml#/schemas/bucket'
    - name: resource_type
      in: path
      required: true
      schema:
        $ref: 'shared.yaml#/schemas/resource_type'
    - name: uid
      in: path
      required: true
      schema:
        $ref: 'shared.yaml#/schemas/uid'

  split_uri_with_signature:
    - name: bucket
      in: path
      required: true
      schema:
        $ref: 'shared.yaml#/schemas/bucket'
    - name: resource_type
      in: path
      required: true
      schema:
        $ref: 'shared.yaml#/schemas/resource_type'
    - name: uid
      in: path
      required: true
      schema:
        $ref: 'shared.yaml#/schemas/uid'
    - name: signature
      in: path
      required: true
      schema:
        $ref: 'shared.yaml#/schemas/signature'

  split_member_uri:
    - name: bucket
      in: path
      required: true
      schema:
        $ref: 'shared.yaml#/schemas/bucket'
    - name: uid
      in: path
      required: true
      schema:
        $ref: 'shared.yaml#/schemas/uid'

responses:
  standard:
    '200':
      description: Successful operation
    '400':
      description: Bad request, see the error field for details
    '401':
      description: Unauthorized is the status code to return when the client provides no credentials or invalid credentials.
    '403':
      description: Forbidden is the status code to return when a client has valid credentials but not enough privileges to perform an action on a resource.

  standard_pdf:
    '200':
      description: Binary PDF file
      content:
        application/pdf:
          schema:
            type: string
            format: binary
    '400':
      description: Bad request, see the error field for details
    '401':
      description: Unauthorized is the status code to return when the client provides no credentials or invalid credentials.
    '403':
      description: Forbidden is the status code to return when a client has valid credentials but not enough privileges to perform an action on a resource.
