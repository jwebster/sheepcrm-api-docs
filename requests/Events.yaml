Events:
  get:
    operationId: getEvents
    summary: Events - List
    description: |
      All the events for a client within the past 14 days and next 90
      Aliased as /events/v2/{bucket}/bookings
    tags:
      - Events
    parameters:
      - name: bucket
        in: path
        required: true
        schema:
          $ref: 'shared.yaml#/schemas/bucket'
      - name: page_size
        in: query
        required: false
        schema:
          type: integer
          default: 250
      - name: page
        in: query
        required: false
        schema:
          type: integer
          default: 1
    responses:
      '200':
        description: A list of events
        content:
          application/json:
            schema:
              $ref: '#/responses/EventsList'
      '400':
        description: a standard error message
      '401':
        description: Authentication error


EventsByState:
  get:
    operationId: getEventsByState
    summary: Events - List by state
    description: "All events by their status"
    tags:
      - Events
    parameters:
      - name: bucket
        in: path
        required: true
        schema:
          $ref: 'shared.yaml#/schemas/bucket'
      - name: "state"
        in: path
        required: true
        description: "the state or classification"
        schema:
          type: "string"
          "enum": [
            "all",
            "current",
            "draft",
            "future",
            "past",
            "running",
          ]
      - name: page_size
        in: query
        required: false
        schema:
          type: integer
          default: 250
      - name: page
        in: query
        required: false
        schema:
          type: integer
          default: 1

    responses:
      '200':
        description: A list of events
        content:
          application/json:
            schema:
              $ref: '#/responses/EventsList'
      '400':
        description: a standard error message
      '401':
        description: Authentication error

EventSingle:
  get:
    operationId: getEvent
    summary: Events - Single
    description: "All the details for an event"
    tags:
      - Events
    parameters:
      $ref: 'shared.yaml#/parameters/bucket_and_uid'

    responses:
      '200':
        description: Single Event
        content:
          application/json:
            schema:
              $ref: '#/responses/EventSingle'
      '400':
        description: a standard error message
      '401':
        description: Authentication error

EventSingleRebase:
  put:
    operationId: rebaseEvent
    summary: Event - Rebase ticket dates
    description: |
      Rebase the ticket dates for an event.
      Use this after moving the date of an event to propogate the date change to all the tickets
    tags:
      - Events
    parameters:
      $ref: 'shared.yaml#/parameters/bucket_and_uid'
    responses:
      '200':
        description: Single Event
        content:
          application/json:
            schema:
              $ref: '#/responses/EventRebase'
      '400':
        description: a standard error message
      '401':
        description: Authentication error

EventSingleSummary:
  get:
    operationId: getEventSummary
    summary: Events - Single summary
    description: |
      Reduced fields for faster API call and for accounts without access to the full event details
    tags:
      - Events
    parameters:
      $ref: 'shared.yaml#/parameters/bucket_and_uid'
    responses:
      '200':
        description: Single Event
        content:
          application/json:
            schema:
              $ref: '#/responses/EventSingle'
      '400':
        description: a standard error message
      '401':
        description: Authentication error

EventAttendance:
  get:
    operationId: getEventAttendance
    summary: "Event - Attendance"
    description: |
      All the attendees for an event
      Aliased as /events/v2/{bucket}/bookings/{uid}/attendance
    tags:
      - Events
    parameters:
      $ref: 'shared.yaml#/parameters/bucket_and_uid'
    responses:
      '200':
        description: List of attendees
        content:
          application/json:
            schema:
              $ref: '#/responses/EventAttendanceList'
      '400':
        description: a standard error message
      '401':
        description: Authentication error
  put:
    summary: "Event - Attendance"
    description: |
      Set the attendance status for a single attendee
    tags:
      - Events
    parameters:
      - name: bucket
        in: path
        required: true
        schema:
          $ref: 'shared.yaml#/schemas/bucket'
      - name: uid
        in: path
        required: true
        schema:
          $ref: 'shared.yaml#/schemas/uid'
      - name: "person_uri"
        in: query
        description: "The URI of the person"
        required: true
        schema:
          $ref: 'shared.yaml#/schemas/uri'
      - name: "status"
        in: query
        description: "the attendance status"
        required: true
        schema:
          type: "string"
          example: "attended"
          enum: ["invited", "accepted", "declined", "attended", "no-show"]
    responses:
      '200':
        description: Updated Event Attendance
        content:
          application/json:
            schema:
              $ref: '#/responses/UpdatedEventAttendance'
      '400':
        description: a standard error message
      '401':
        description: Authentication error

EventAttendanceAll:
  get:
    operationId: getEventAttendanceAll
    summary: "Event - Attendance"
    description: |
      All the attendees for an event
      Aliased as /events/v2/{bucket}/bookings/{uid}/attendance
    tags:
      - Events
    parameters:
      $ref: 'shared.yaml#/parameters/bucket_and_uid'
    responses:
      '200':
        description: List of attendees
        content:
          application/json:
            schema:
              $ref: '#/responses/EventAttendanceList'
      '400':
        description: a standard error message
      '401':
        description: Authentication error

EventAvailableTickets:
  get:
    operationId: getEventAvailableTickets
    summary: Event - Available Ticket Types
    description: |
      Get all the ticket types available for a specific event
    tags:
      - Events
    parameters:
      $ref: 'shared.yaml#/parameters/bucket_and_uid'
    responses:
      '200':
        description: List of available tickets
        content:
          application/json:
            schema:
              $ref: '#/responses/EventAvailableTickets'
      '400':
        description: a standard error message
      '401':
        description: Authentication error

EventOrders:
  get:
    operationId: getEventOrders
    summary: Event - Orders
    description: |
      All the orders for an event for a booking
      Requires `booking.orders` permission
    tags:
      - Events
    parameters:
      $ref: 'shared.yaml#/parameters/bucket_and_uid'
    responses:
      '200':
        description: List of orders
        content:
          application/json:
            schema:
              $ref: '#/responses/OrdersList'
      '400':
        description: a standard error message
      '401':
        description: Authentication error

EventOrdersForContact:
  get:
    operationId: getEventOrdersForContact
    summary: Event - Orders for a contact
    description: |
      All the orders for an event for a specific contact
      Requires `contact.orders` permission
    tags:
      - Events
    parameters:
      $ref: 'shared.yaml#/parameters/bucket_and_uid'
    responses:
      '200':
        description: List of orders
        content:
          application/json:
            schema:
              $ref: '#/responses/OrdersListForContact'
      '400':
        description: a standard error message
      '401':
        description: Authentication error


EventOrderSingle:
  get:
    operationId: getEventOrder
    summary: Event Order - get
    description: |
      A specific order for an event
      Requires `event.order` permission
    tags:
      - Events
    parameters:
      - name: bucket
        in: path
        required: true
        schema:
          $ref: 'shared.yaml#/schemas/bucket'
      - name: resource_type
        in: path
        required: true
        schema:
          $ref: 'shared.yaml#/schemas/resource_type'
      - name: uid
        in: path
        required: true
        description: "The resource UID, usually a person UID"
        schema:
          $ref: 'shared.yaml#/schemas/uid'
      - name: euid
        in: path
        required: true
        description: "The event UID"
        schema:
          $ref: 'shared.yaml#/schemas/uid'
    responses:
      '200':
        description: A single order
        content:
          application/json:
            schema:
              $ref: '#/responses/Order'
      '400':
        description: a standard error message
      '401':
        description: Authentication error
  delete:
    operationId: deleteEventOrder
    summary: Event Order - delete
    description: |
      Deleted a specific, single order for an event
      Requires `event.order` permission
    tags:
      - Events
    parameters:
      - name: bucket
        in: path
        required: true
        schema:
          $ref: 'shared.yaml#/schemas/bucket'
      - name: resource_type
        in: path
        required: true
        schema:
          $ref: 'shared.yaml#/schemas/resource_type'
      - name: uid
        in: path
        required: true
        description: "The resource UID, usually a person UID"
        schema:
          $ref: 'shared.yaml#/schemas/uid'
      - name: euid
        in: path
        required: true
        description: "The event UID"
        schema:
          $ref: 'shared.yaml#/schemas/uid'
    responses:
      '200':
        description: A single order
        content:
          application/json:
            schema:
              $ref: '#/responses/OrderDeleted'
      '400':
        description: a standard error message
      '401':
        description: Authentication error

EventOrderSingleQuestions:
  get:
    operationId: getEventOrderQuestions
    summary: Event Order - questions
    description: |
      The questions and answers submitted for this order
      Requires `event.order` permission
    tags:
      - Events
    parameters:
      - name: bucket
        in: path
        required: true
        schema:
          $ref: 'shared.yaml#/schemas/bucket'
      - name: resource_type
        in: path
        required: true
        schema:
          $ref: 'shared.yaml#/schemas/resource_type'
      - name: uid
        in: path
        required: true
        description: "The resource UID, usually a person UID"
        schema:
          $ref: 'shared.yaml#/schemas/uid'
      - name: euid
        in: path
        required: true
        description: "The event UID"
        schema:
          $ref: 'shared.yaml#/schemas/uid'
    responses:
      '200':
        description: A single order questions
        content:
          application/json:
            schema:
              $ref: '#/responses/OrderQuestions'
      '400':
        description: a standard error message
      '401':
        description: Authentication error

EventOrdersExport:
  get:
    operationId: getEventOrdersExport
    summary: Event - Orders Export
    description: |
      All the orders for an event in spreadsheet format
    tags:
      - Events
      - Export
    parameters:
      $ref: 'shared.yaml#/parameters/bucket_and_uid'
    responses:
      $ref: 'shared.yaml#/responses/standard_xlsx'

EventTicketsAll:
  get:
    operationId: getEventTicketsAll
    summary: "Event Tickets"
    description: "Get all the ticket for a specific event"
    tags:
      - Events
      - Export
    parameters:
      $ref: 'shared.yaml#/parameters/bucket_and_uid'
    responses:
      '200':
        description: List of tickets
        content:
          application/json:
            schema:
              $ref: '#/responses/TicketsList'
      '400':
        description: a standard error message
      '401':
        description: Authentication error

#
# Responses
#

responses:
  EventsList:
    properties:
      bookings:
        type: array
        items:
          $ref: '#/responses/EventSingle'

  OrdersListForContact:
    properties:
      contact_uri:
        $ref: 'shared.yaml#/schemas/uri'
      orders:
        type: array
        items:
          type: object
          properties:
            booking_display:
              type: string
            booking_uri:
              $ref: 'shared.yaml#/schemas/uri'

  EventSingle:
    properties:
      booking_type:
        type: string
      cancelled:
        type: boolean
      capacity:
        type: number
      category:
        type: string
      catering:
        type: boolean
      controller:
        type: string
      date_range:
        type: string
      description:
        type: string
      display_value:
        type: string
      end_date:
        $ref: 'shared.yaml#/schemas/date'
      end_datetime:
        $ref: 'shared.yaml#/schemas/datetime'
      end_time:
        $ref: 'shared.yaml#/schemas/time'
      eventbrite_id:
        type: string
      eventbrite_last_sync:
        $ref: 'shared.yaml#/schemas/datetime'
      external_boxoffice_link:
        $ref: 'shared.yaml#/schemas/url'
      external_image:
        $ref: 'shared.yaml#/schemas/url'
      external_web_link:
        $ref: 'shared.yaml#/schemas/url'
      formatted_title:
        type: string
      group:
        type: array
        items:
          type: object
          properties:
            display_value:
              type: string
            ref:
              $ref: 'shared.yaml#/schemas/uri'
      is_sold_out:
        type: boolean
      location:
        type: string
      location_address_string:
        type: string
      location_country:
        type: string
      location_postal_code:
        type: string
      photo:
        $ref: 'shared.yaml#/schemas/url'
      record_state:
        type: string
      series_id:
        type: string
      start_date:
        $ref: 'shared.yaml#/schemas/date'
      start_datetime:
        $ref: 'shared.yaml#/schemas/datetime'
      start_time:
        $ref: 'shared.yaml#/schemas/time'
      status:
        type: string
      subcategory:
        type: string
      tags:
        type: array
        items:
          type: string
      ticketed_event:
        type: boolean
      title:
        type: string
      uid:
        $ref: 'shared.yaml#/schemas/uid'
      uri:
        $ref: 'shared.yaml#/schemas/uri'
      user_interface:
        type: object
        properties:
          can_create_booking:
            type: boolean
          can_delete_booking:
            type: boolean
          can_edit_booking:
            type: boolean
          can_restore_booking:
            type: boolean
          policy_name:
            type: string
      waitlist_available:
        type: boolean
      website:
        $ref: 'shared.yaml#/schemas/url'

  EventRebase:
    properties:
      ticket_changes:
        type: array
        items:
          type: object
          properties:
            uri:
              $ref: 'shared.yaml#/schemas/uri'
            old_date:
              $ref: 'shared.yaml#/schemas/date'
            new_date:
              $ref: 'shared.yaml#/schemas/date'
      unchanged_tickets:
        type: integer

  EventAttendanceList:
    properties:
      booking:
        $ref: '#/responses/EventSingle'
      booking_uri:
        $ref: 'shared.yaml#/schemas/uri'
      sessions:
        type: array
        items:
          type: object
          properties:
            attendee_email:
              $ref: 'shared.yaml#/schemas/email'
            attendee_name:
              type: string
            created:
              $ref: 'shared.yaml#/schemas/datetime'
            display_value:
              type: string
            guest:
              type: boolean
            guest_ref:
              $ref: 'shared.yaml#/schemas/uri'
            last_updated:
              $ref: 'shared.yaml#/schemas/datetime'
            person_ref:
              $ref: 'shared.yaml#/schemas/uri'
            record_state:
              type: string
            status:
              type: string
            ticket:
              type: string
            ticket_ref:
              $ref: 'shared.yaml#/schemas/uri'
            uid:
              $ref: 'shared.yaml#/schemas/uid'
            uri:
              $ref: 'shared.yaml#/schemas/uri'

  UpdatedEventAttendance:
    properties:
      attendance:
        type: array
        items:
          type: object
          properties:
            attendance:
              type: object
              properties:
                attendee_email:
                  $ref: 'shared.yaml#/schemas/email'
                attendee_name:
                  type: string
                booking_ref:
                  $ref: 'shared.yaml#/schemas/expanded_uri'
                guest:
                  type: boolean
                legacy_uid:
                  $ref: 'shared.yaml#/schemas/legacy_uid'
                person_ref:
                  $ref: 'shared.yaml#/schemas/expanded_uri'
                status:
                  type: string
                ticket_ref:
                  $ref: 'shared.yaml#/schemas/uri'
            uri:
              type: string
      booking_ref:
        $ref: 'shared.yaml#/schemas/uri'
      person_ref:
        $ref: 'shared.yaml#/schemas/uri'
      status:
        type: string

  EventAvailableTickets:
    properties:
      available_tickets:
        type: array
        items:
          type: object
          properties:
            access_code:
              type: string
            allocated:
              type: number
            amount:
              $ref: 'shared.yaml#/schemas/number_as_string'
            available:
              type: number
            available_from_date:
              type: object
              properties: {}
            currency:
              $ref: 'shared.yaml#/schemas/currency'
            description:
              type: string
            member_only:
              type: boolean
            name:
              type: string
            number_of_attendees_per_ticket:
              $ref: 'shared.yaml#/schemas/number_as_string'
            pricing:
              type: string
              deprecated: true
            reserved:
              type: number
            single_use:
              type: boolean
            sort_order:
              $ref: 'shared.yaml#/schemas/sort_order'
            tags:
              type: array
              items:
                type: string
            tax:
              type: string
            total:
              type: number
            uri:
              $ref: 'shared.yaml#/schemas/uri'
            xero_account_code:
              type: string

  OrderTotal:
    properties:
      fully_paid:
        type: boolean
      outstanding:
        type: number
        description: The amount remaining to be paid on the order
      paid:
        type: number
        description: The amount already paid on the order
      processing_fees:
        type: number
        description: The total amount of the processing fees
      total:
        type: number
        description: The total amount of the order

  Order:
    properties:
      attendee_count:
        type: number
      buyer:
        $ref: 'shared.yaml#/schemas/uri'
      buyer_index_name:
        type: string
      currencies:
        type: array
        items:
          $ref: 'shared.yaml#/schemas/currency'
      order_date:
        $ref: 'shared.yaml#/schemas/datetime'
      order_total:
        type: object
        description: "NOTE: The currencies of each payment form the keys within the order_total"
        properties:
          gbp:
            $ref: '#/responses/OrderTotal'
            type: object
          eur:
            $ref: '#/responses/OrderTotal'
            type: object
          usd:
            $ref: '#/responses/OrderTotal'
            type: object
      tickets:
        type: number
      tickets_as_string:
        type: string


  OrdersList:
    properties:
      booking:
        $ref: '#/responses/EventSingle'
      booking_uri:
        $ref: 'shared.yaml#/schemas/uri'
      buyers:
        type: object
        properties:
          /example/person/12dd1259/:
            $ref: '#/responses/Order'
      number_of_orders:
        type: number
      number_of_unpaid_orders:
        type: number

  TicketExpanded:
    properties:
      activity:
        type: string
      amount:
        type: number
      booking:
        $ref: 'shared.yaml#/schemas/uri'
      booking_display:
        type: string
      buyer:
        $ref: 'shared.yaml#/schemas/uri'
      buyer_display:
        type: string
      created:
        $ref: 'shared.yaml#/schemas/datetime'
      currency:
        $ref: 'shared.yaml#/schemas/currency'
      date:
        $ref: 'shared.yaml#/schemas/datetime'
      display_value:
        type: string
      formatted_title:
        type: string
      last_updated:
        $ref: 'shared.yaml#/schemas/datetime'
      legacy_uid:
        type: string
      number_of_attendees:
        type: number
      purchase_date:
        $ref: 'shared.yaml#/schemas/datetime'
      quantity:
        type: number
      record_state:
        type: string
      reference: {}
      tax_rate:
        type: number
      ticket_id:
        type: string
      ticket_type:
        $ref: 'shared.yaml#/schemas/uri'
      ticket_type_display:
        type: string
      uid:
        $ref: 'shared.yaml#/schemas/uid'
      uri:
        $ref: 'shared.yaml#/schemas/uri'
      venue:
        type: string
      xero_account_code:
        type: string

  TicketsList:
    properties:
      booking:
        $ref: '#/responses/EventSingle'
      booking_uri:
        $ref: 'shared.yaml#/schemas/uri'
      tickets:
        type: array
        items:
          $ref: '#/responses/TicketExpanded'

  OrderDeleted:
    properties:
      booking_uri:
        $ref: 'shared.yaml#/schemas/uri'
      contact_uri:
        $ref: 'shared.yaml#/schemas/uri'
      deleted:
        type: array
        description: The list of deleted tickets
        items:
          $ref: 'shared.yaml#/schemas/uri'
      errors:
        type: array
        description: The list of errors
        items:
          type: string
      returned_stock:
        type: array
        description: The list of returned stock uris
        items:
          $ref: 'shared.yaml#/schemas/uri'

  OrderQuestions:
    properties:
      booking_uri:
        $ref: 'shared.yaml#/schemas/uri'
      booking_display_value:
        type: string
      buyer_uri:
        $ref: 'shared.yaml#/schemas/uri'
      responses:
        type: array
        description: The list of questions and answers
        items:
          $ref: '#/responses/OrderFormResponse'

  OrderFormResponse:
    properties:
      contact_display_value:
        type: string
      contact_uri:
        $ref: 'shared.yaml#/schemas/uri'
      response:
        type: object
        $ref: '#/responses/FormResponse'
      role:
        type: string
        enum: ["attendee", "buyer"]
      uri:
        $ref: 'shared.yaml#/schemas/uri'

  SimpleQuestion:
    properties:
      answer:
        type: string
      form_type:
        type: string
      marks_available:
        type: number
      question:
        type: string
      required:
        type: boolean
      uri:
        $ref: 'shared.yaml#/schemas/uri'

  FormResponse:
    properties:
      flat:
        type: object
        description: The flat representation of the form response
      sections:
        type: array
        description: The sections of the form response
        items:
          $ref: '#/responses/FormSection'
      simple:
        type: array
        description: The simple representation of the form response
        items:
          $ref: '#/responses/SimpleQuestion'

  FormSection:
    properties:
      feedback_on:
        type: boolean
      internal_comments_on:
        type: boolean
      intro:
        type: string
      marks:
        type: number
      questions:
        type: array
        description: The questions in the form section
        items:
          $ref: '#/responses/FormQuestion'
      ref:
        type: string
      scoring:
        type: boolean
      section_uri:
        $ref: 'shared.yaml#/schemas/uri'
      subtitle:
        type: string
      title:
        type: string

  FormQuestion:
    properties:
      answer:
        type: string
      choices_url:
        $ref: 'shared.yaml#/schemas/url'
      core_field:
        type: boolean
      core_field_update_policy:
        type: string
        enum: ["overwrite", "underwrite"]
      disabled:
        type: boolean
      field:
        type: string
        enum: [
          "boolean",
          "boolean-simple",
          "boolean-switch",
          "choice",
          "choice-from-url",
          "choice-from-sheep-segment",
          "date",
          "divider",
          "email",
          "extra-large-text",
          "file",
          "helper-text",
          "image",
          "profile_photo",
          "large-text",
          "multi-choice",
          "multi-choice-checkbox",
          "multi-choice-checkbox-from-sheep-segment",
          "multi-choice-from-sheep-segment",
          "multi-choice-from-url",
          "multi-file",
          "number",
          "telephone",
          "text",
          "text-list",
          "time",
        ]
      formType:
        type: string
      form_type:
        type: string
      fully_qualified_field:
        type: string
      helper_text:
        type: string
      label:
        type: string
      marks_available:
        type: number
      max_word_limit:
        type: number
      min_word_limit:
        type: number
      options:
        type: array
        items:
          type: string
      original_field:
        type: string
      question_uri:
        $ref: 'shared.yaml#/schemas/uri'
      required:
        type: boolean
      visibility:
        type: string
        enum: ["applicant", "internal_only", "feedback"]


