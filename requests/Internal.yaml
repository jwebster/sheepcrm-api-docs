PartnerSync:
  post:
    operationId: partnerSync
    summary: Request Partner Sync
    description: |
      Request a sync with a partner
    tags:
      - Internal
      - Partners
    parameters:
      - name: bucket
        in: path
        required: true
        schema:
          $ref: 'shared.yaml#/schemas/bucket'
      - name: partner
        in: path
        required: true
        description: The partner to sync with e.g. mailchimp, gocardless, stripe
        schema:
          type: string
          enum:
            - clio
            - gocardless
            - mailchimp
            - mryum
            - stripe
      - name: action
        in: path
        required: true
        description: The action to perform e.g. pull, push
        schema:
          type: string
          enum:
            - pull
            - push
      - name: data_type
        in: path
        required: true
        schema:
          type: string
          enum:
            - contacts
            - consents
            - payments
        description: The data type to sync e.g. contacts, payments
      - name: since_hours
        in: query
        required: false
        schema:
          type: integer
          description: |
            The number of hours to look back for changes
            e.g. 24 would look back 24 hours for changes
          default: 24
      - name: create_contacts
        in: query
        required: false
        schema:
          type: boolean
          description: |
            If the data_type is contacts, should new contacts be created?
      - name: full
        in: query
        required: false
        schema:
          type: boolean
          description: |
            Where supported a full sync will override the since_hours parameter
    responses:
      '200':
        description: |
          Details of the request.
          The output from the requested sync will appear in the usage reports with a summary of the results.
        content:
          application/json:
            schema:
              $ref: '#/responses/PartnerSync'
      '400':
        description: Bad request, see the error field for details
      '401':
        description: Unauthorized is the status code to return when the client provides no credentials or invalid credentials.
      '403':
        description: Forbidden is the status code to return when a client has valid credentials but not enough privileges to perform an action on a resource.
      '404':
        description: Not found
      '500':
        description: An error occurred within sheepCRM, please report to support@sheepcrm.com

MembershipTypeExtras:
  get:
    operationId: getMembershipTypeExtras
    summary: Membership Plan - Extra settings
    description: |
      Get the extra settings for a membership plan
    tags:
      - Membership
      - Internal
    parameters:
      $ref: 'shared.yaml#/parameters/bucket_and_uid'
    responses:
      $ref: 'shared.yaml#/responses/standard'

MembershipTypeExtrasAdditionalField:
  post:
    operationId: updateMembershipTypeExtras
    summary: Membership Plan - Extras - Add additional field
    description: |
      Add an additional user input field to a membership plan
    tags:
      - Membership
      - Internal
    parameters:
      - name: bucket
        in: path
        required: true
        schema:
          $ref: 'shared.yaml#/schemas/bucket'
      - name: uid
        in: path
        required: true
        schema:
          $ref: 'shared.yaml#/schemas/uid'
      - name: label
        in: query
        required: true
        schema:
          type: string
          description: The label for the field that will be shown to the user
      - name: field
        in: query
        required: false
        schema:
          type: string
          description: The field name, if not provided the label will be slugified
      - name: description
        in: query
        required: true
        schema:
          type: string
          description: A description of the field, shown to the user
      - name: form_type
        in: query
        required: true
        schema:
          type: string
          description: The type of field
          enum:
            - checkbox
            - date
            - email
            - multi-choice
            - number
            - person_record
            - select
            - tel
            - text
            - textarea
      - name: required
        in: query
        required: false
        schema:
          type: boolean
          description: Is this field required?
      - name: options
        in: query
        required: false
        schema:
          type: array
          description: |
            If the form_type is select, this is the list of options that will be shown to the user
          items:
            type: string
      - name: dob_required
        in: query
        required: false
        schema:
          type: boolean
          description: |
            If the form_type is person_record, is the date of birth required?

    responses:
      $ref: 'shared.yaml#/responses/standard'
  delete:
    operationId: deleteMembershipTypeExtras
    summary: Membership Plan - Extras - Remove additional field
    description: |
      Remove an additional user input field from a membership plan
    tags:
      - Membership
      - Internal
    parameters:
      - name: bucket
        in: path
        required: true
        schema:
          $ref: 'shared.yaml#/schemas/bucket'
      - name: uid
        in: path
        required: true
        schema:
          $ref: 'shared.yaml#/schemas/uid'
      - name: field
        in: query
        required: true
        schema:
          type: string
          description: The field name to be removed
    responses:
      $ref: 'shared.yaml#/responses/standard'

MembershipTypeExtrasCondition:
  post:
    operationId: updateMembershipTypeExtrasCondition
    summary: Membership Plan - Extras - Add condition
    description: |
      Add a condition to a membership plan
      e.g. Age: Under 18
    tags:
      - Membership
      - Internal
    parameters:
      - name: bucket
        in: path
        required: true
        schema:
          $ref: 'shared.yaml#/schemas/bucket'
      - name: uid
        in: path
        required: true
        schema:
          $ref: 'shared.yaml#/schemas/uid'
      - name: key
        in: query
        required: true
        schema:
          type: string
          description: The key element of the condition
      - name: value
        in: query
        required: true
        schema:
          type: string
          description: The value element of the condition
    responses:
      $ref: 'shared.yaml#/responses/standard'
  delete:
    operationId: deleteMembershipTypeExtrasCondition
    summary: Membership Plan - Extras - Remove condition
    description: |
      Remove a condition from a membership plan
    tags:
      - Membership
      - Internal
    parameters:
      - name: bucket
        in: path
        required: true
        schema:
          $ref: 'shared.yaml#/schemas/bucket'
      - name: uid
        in: path
        required: true
        schema:
          $ref: 'shared.yaml#/schemas/uid'
      - name: key
        in: query
        required: true
        schema:
          type: string
          description: The key element of the condition
    responses:
      $ref: 'shared.yaml#/responses/standard'

WarehouseBuild:
  post:
    operationId: warehouseBuild
    summary: Request a warehouse build
    description: |
      Request a warehouse build
    tags:
      - Internal
      - Partners
    parameters:
      - name: bucket
        in: path
        required: true
        schema:
          $ref: 'shared.yaml#/schemas/bucket'
      - name: facet
        in: path
        required: true
        description: The facet to build e.g. contact, membership
        schema:
          type: string
          enum:
            - attendance
            - contact
            - contact_large
            - fundraising
            - membership
      - name: force
        in: query
        required: false
        schema:
          type: boolean
          description: |
            If force is false the build will only run if the there are relevant changes since the last build.
          default: false
      - name: safe_mode
        in: query
        required: false
        schema:
          type: boolean
          description: |
            If safe_mode is true, the build will be executed in a read only way.
          default: false
    responses:
      '200':
        description: |
          Details of the request.
          The output from the requested sync will appear in the usage reports with a summary of the results.
        content:
          application/json:
            schema:
              $ref: '#/responses/WarehouseBuild'
      '400':
        description: Bad request, see the error field for details
      '401':
        description: Unauthorized is the status code to return when the client provides no credentials or invalid credentials.
      '403':
        description: Forbidden is the status code to return when a client has valid credentials but not enough privileges to perform an action on a resource.
      '404':
        description: Not found
      '500':
        description: An error occurred within sheepCRM, please report to support@sheepcrm.com

CreateUserPolicy:
  post:
    operationId: CreateUserPolicy
    summary: Create new composite user policy
    description: |
      Create a composite user policy from a set of standard policies
    tags:
      - Internal
      - User Policy
    parameters:
      - name: bucket
        in: path
        required: true
        schema:
          $ref: 'shared.yaml#/schemas/bucket'
      - name: policies
        in: query
        required: true
        schema:
          type: string
          enum:
            - achievement
            - base
            - base-ro
            - events
            - events-management
            - evidence
            - evidence-read-only
            - form-admin
            - form-response
            - gdpr
            - group
            - group-add-member
            - group-members
            - health-edi
            - membership
            - membership-ro
            - notifications
            - payment
            - person
            - person-ro
            - send-messages
            - session
            - team-leader
            - team-leader-with-applications
            - tasks-and-notes
            - vehicle
            - vehicle-ro
      - name: user_type
        in: query
        required: true
        description: The name of the new user policy
        schema:
          type: string
      - name: name
        in: query
        required: false
        description: Optional name for the policy
        schema:
          type: string
    responses:
      $ref: 'shared.yaml#/responses/standard'

CreateGroupPolicy:
  post:
    operationId: CreateGroupPolicy
    summary: Create group policies
    description: |
      Expand a user policy for all groups
    tags:
      - Internal
      - User Policy
    parameters:
      - name: bucket
        in: path
        required: true
        schema:
          $ref: 'shared.yaml#/schemas/bucket'
      - name: uid
        in: path
        required: true
        schema:
          $ref: 'shared.yaml#/schemas/uid'
      - name: tag_filter
        in: query
        required: false
        schema:
          type: string
    responses:
      $ref: 'shared.yaml#/responses/standard'

CreateSinglePolicy:
  post:
    operationId: CreateSinglePolicy
    summary: Create a single policies
    description: |
      Create a single user group for a specific user policy
    tags:
      - Internal
      - User Policy
    parameters:
      - name: bucket
        in: path
        required: true
        schema:
          $ref: 'shared.yaml#/schemas/bucket'
      - name: uid
        in: path
        required: true
        schema:
          $ref: 'shared.yaml#/schemas/uid'
      - name: tag_filter
        in: query
        required: false
        schema:
          type: string
    responses:
      $ref: 'shared.yaml#/responses/standard'

AddPolicyToGroupLeaders:
  post:
    operationId: AddPolicyToGroupLeaders
    summary: Add a policy to all group leaders
    description: |
      Add the given policy to all group user accounts.
      The output is logged in the usage reports; safe mode will output the planned changes without applying them
    tags:
      - Internal
      - User Policy
    parameters:
      - name: bucket
        in: path
        required: true
        schema:
          $ref: 'shared.yaml#/schemas/bucket'
      - name: uid
        in: path
        required: true
        schema:
          $ref: 'shared.yaml#/schemas/uid'
      - name: safe_mode
        in: query
        required: false
        schema:
          type: boolean
          default: true
    responses:
      $ref: 'shared.yaml#/responses/standard'


#
# Responses
#

responses:
  PartnerSync:
    properties:
      action:
        type: string
      data_type:
        type: string
      function_name:
        type: string
      params:
        type: object
        description: |
          The parameters to pass to the lambda function which will execute your request
        properties:
          bucket:
            type: string
          lambda_prefix:
            type: string
          safe_mode:
            type: boolean
          since_hours:
            type: integer
            description: The number of hours to look back for changes
      partner:
        type: string
      status:
        type: string
        description: OK if the request was successful

  WarehouseBuild:
    properties:
      function_name:
        type: string
      message:
        type: string
      params:
        type: object
        description: |
          The parameters to pass to the lambda function which will execute your request
        properties:
          bucket:
            type: string
          force:
            type: boolean
          safe_mode:
            type: boolean
      status:
        type: string
        description: OK if the request was successful
